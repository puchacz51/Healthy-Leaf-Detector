name: Deploy to Azure

on:
  push:
    branches:
      - '*'  # Trigger on any branch commit

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: wtumimage.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build . -t my-python-app
        docker tag my-python-app wtumimage.azurecr.io/my-python-app
        docker push wtumimage.azurecr.io/my-python-app

    - name: Check if Azure Container Instance exists
      id: check-aci
      run: |
        aci_name="my-container-instance"
        aci_exists=$(az container show --resource-group myResourceGroup --name $aci_name --query "name" -o tsv || echo "")
        echo "::set-output name=exists::$aci_exists"

    - name: Delete existing Azure Container Instance
      if: steps.check-aci.outputs.exists != ''
      run: |
        az container delete --resource-group myResourceGroup --name my-container-instance --yes

    - name: Deploy to Azure Container Instance
      run: |
        az container create --resource-group myResourceGroup --name my-container-instance \
          --image wtumimage.azurecr.io/my-python-app:latest --cpu 4 --memory 8 \
          --registry-login-server wtumimage.azurecr.io --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} --dns-name-label my-container-instance \
          --ports 80 \
          --environment-variables "STORAGE_KEY=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}"
